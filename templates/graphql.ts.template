import { AuthChecker, ResolverData } from "type-graphql";

enum RoleName {
  ADMIN = 'admin',
  USER = 'user',
}

type IAuthJWT = {
  // User-Token Model Here..

  roles: RoleName[];
}

type ContextType = {
  user?: IAuthJWT;
}

export const customAuthChecker: AuthChecker<ContextType, RoleName> = (
  data: ResolverData<ContextType>,
  requiredRoles: RoleName[],
) => {
  return checkUserPermissions(requiredRoles, data.context.user)
};

function checkUserPermissions(requiredRoles: string[], userToken?: IAuthJWT) {
  if (requiredRoles.length === 0)
    return true

  const userHasPermission = /* check against the userToken (eg: 'userToken.roles') */ false;

  return userHasPermission;
}
