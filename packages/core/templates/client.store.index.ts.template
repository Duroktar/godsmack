import { configureStore, ThunkAction, Action , getDefaultMiddleware } from '@reduxjs/toolkit'
import rootReducer, { RootState } from './rootReducer'

export const store = configureStore({
  reducer: rootReducer,
  middleware: [...getDefaultMiddleware()] as const,
})

declare var module: NodeModule & { hot: any }

if (process.env.NODE_ENV === 'development' && module.hot) {
  module.hot.accept('./rootReducer', () => {
    const newRootReducer = require('./rootReducer').default
    store.replaceReducer(newRootReducer)
  })
}

export type AppDispatch = typeof store.dispatch
export type AppThunk<R = void> = ThunkAction<Promise<R>, RootState, unknown, Action<string>>
export type AppStore = typeof store

export default store
